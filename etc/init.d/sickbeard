#! /bin/sh

### BEGIN INIT INFO
# Provides:          sickbeard
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      $NetworkManager
# Should-Stop:       $NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts instance of CouchPotato
# Description:       starts instance of CouchPotato using start-stop-daemon
### END INIT INFO

############### BEGIN EDIT ME ################
RUN_GRP=users
RUN_AS=sickbeard
APP_PATH=/opt/sickbeard
DAEMON=$APP_PATH/SickBeard.py
PID_FILE=/var/run/sickbeard/sickbeard.pid
PID_PATH=$(dirname $PID_FILE)
NAME=sickbeard
DESC=sickbeard
DAEMON_OPTS=" --daemon --pidfile=${PID_FILE}"
ISRUN=0
############### END EDIT ME ##################

# Get lsb functions
. /lib/lsb/init-functions

# Create PID directory if not exist and ensure the Sickbeard user can write to it
if [ ! -d $PID_PATH ]; then
    mkdir -p $PID_PATH
    chown $RUN_AS $PID_PATH
fi

if [ -e $PID_FILE ]; then
    PID=`cat $PID_FILE`
    if ! kill -0 $PID > /dev/null 2>&1; then
        echo "Removing stale $PID_FILE"
        rm $PID_FILE
    fi
fi

is_running()
{
    if [ ! -e $PID_FILE ]; then
        return 1
    fi
    return 0
}

<<<<<<< HEAD
=======

>>>>>>> Pass 1 Update
case "$1" in
    start)
        echo "Starting $DESC"
        start-stop-daemon -c $RUN_AS --start --exec $DAEMON -- $DAEMON_OPTS
        echo "start-stop-daemon -c $RUN_AS --start --exec $DAEMON -- $DAEMON_OPTS"
        ;;
    stop)
        if is_running; then
            echo "Stopping $DESC"
            start-stop-daemon --stop --pidfile $PID_FILE --retry 15
        fi
        ;;

    restart|force-reload)
        if is_running; then
            start-stop-daemon --stop --pidfile $PID_FILE --retry 15
        fi
        echo "Restarting $DESC"
<<<<<<< HEAD
        start-stop-daemon -d $APP_PATH -c $RUN_AS --start --pidfile $PID_FILE --exec $DAEMON -- $DAEMON_OPTS
=======
        start-stop-daemon -c $RUN_AS --start --exec $DAEMON -- $DAEMON_OPTS
>>>>>>> Pass 1 Update
        ;;

    master)
        if is_running; then
            ISRUN=1
            start-stop-daemon --stop --pidfile $PID_FILE --retry 15
        fi
        cd $APP_PATH
        git stash
        git checkout master
        chown $RUN_AS:$RUN_GRP $APP_PATH -R
        chmod 775 $APP_PATH -R
        #git stash
        if [ "$ISRUN" == 1 ]; then
            start-stop-daemon -c $RUN_AS --start --exec $DAEMON -- $DAEMON_OPTS
        fi
        ;;
    develop)
        if is_running; then
            ISRUN=1
            start-stop-daemon --stop --pidfile $PID_FILE --retry 15
        fi
        cd $APP_PATH
        git stash
        git checkout development
        chown $RUN_AS:$RUN_GRP $APP_PATH -R
        chmod 775 $APP_PATH -R
        #git stash
        if [ "$ISRUN" == 1 ]; then
            start-stop-daemon -c $RUN_AS --start --exec $DAEMON -- $DAEMON_OPTS
        fi
        ;;
    swap)
        if is_running; then
            ISRUN=1
            start-stop-daemon --stop --pidfile $PID_FILE --retry 15
        fi
        if [ -d $APP_PATH ]; then
            rm -Rf $APP_PATH
        fi
        git clone "$2" -b "$3" $APP_PATH
        echo 'git_path = "/usr/bin/git"' > /opt/sickbeard/config.ini
        chown $RUN_AS:$RUN_GRP $APP_PATH -R
        chmod 775 $APP_PATH -R
        #cd $APP_PATH
        #git stash
        if [ "$ISRUN" == 1 ]; then
            start-stop-daemon -c $RUN_AS --start --exec $DAEMON -- $DAEMON_OPTS
        fi
        ;;
    status)
        status_of_proc -p $PID_FILE "$DAEMON" "$NAME"
        ;;
    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
